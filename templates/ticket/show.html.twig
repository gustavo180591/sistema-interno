{% extends 'base.html.twig' %}

{% block title %}Ticket #{{ ticket.idSistemaInterno }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .ticket-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 0.5rem;
            padding: 1.5rem;
            margin-bottom: 2rem;
            border-left: 4px solid #0d6efd;
        }
        
        .info-card {
            border: none;
            border-radius: 0.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            transition: transform 0.2s;
            height: 100%;
        }
        
        .info-card:hover {
            transform: translateY(-2px);
        }
        
        .info-card .card-body {
            padding: 1.5rem;
        }
        
        .info-card .card-title {
            color: #495057;
            font-weight: 600;
            margin-bottom: 1.25rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .info-card .card-title i {
            color: #0d6efd;
        }
        
        .info-item {
            margin-bottom: 0.75rem;
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
        }
        
        .info-item i {
            color: #6c757d;
            margin-top: 0.25rem;
            min-width: 20px;
        }
        
        .info-content {
            flex: 1;
        }
        
        .info-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.25rem;
        }
        
        .info-value {
            color: #212529;
            word-break: break-word;
        }
        
        .status-badge {
            font-size: 0.8rem;
            padding: 0.4em 0.8em;
            border-radius: 0.25rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .action-buttons .btn {
            min-width: 120px;
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
        }
        
        .ticket-content {
            background: white;
            border-radius: 0.5rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
        
        .ticket-actions {
            background: #f8f9fa;
            border-radius: 0.5rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border-left: 3px solid #0d6efd;
        }
        
        .proposal-alert {
            background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
            border: 1px solid #ffeaa7;
            border-radius: 0.5rem;
            padding: 1rem;
            margin-bottom: 1rem;
        }
        
        .user-assignment {
            background: #e3f2fd;
            border-radius: 0.5rem;
            padding: 1rem;
            margin-bottom: 1rem;
            border-left: 3px solid #2196f3;
        }
        
        .timeline {
            position: relative;
            padding-left: 2rem;
            margin: 2rem 0;
        }
        
        .timeline::before {
            content: '';
            position: absolute;
            left: 0.5rem;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #e9ecef;
        }
        
        .timeline-item {
            position: relative;
            padding-bottom: 1.5rem;
            padding-left: 1.5rem;
        }
        
        .timeline-item::before {
            content: '';
            position: absolute;
            left: -1.9rem;
            top: 0.25rem;
            width: 1rem;
            height: 1rem;
            border-radius: 50%;
            background: #0d6efd;
            border: 3px solid #fff;
        }
        
        .timeline-date {
            font-size: 0.8rem;
            color: #6c757d;
            margin-bottom: 0.25rem;
        }
        
        .timeline-content {
            background: #fff;
            padding: 1rem;
            border-radius: 0.375rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.05);
        }
        
        .assignment-history {
            max-height: 200px;
            overflow-y: auto;
            padding-right: 5px;
            margin-top: 0.5rem;
        }
        
        .assignment-item {
            background-color: #f8f9fa;
            transition: all 0.2s;
            border-left: 3px solid #0d6efd;
            padding: 0.75rem;
            margin-bottom: 0.5rem;
            border-radius: 0.25rem;
        }
        
        .assignment-item:hover {
            background-color: #e9ecef;
        }
        
        .ticket-taker-info {
            background-color: #f8f9fa;
            border-radius: 0.5rem;
            padding: 1rem;
            margin-bottom: 1rem;
            border-left: 3px solid #198754;
        }
        
    </style>
{% endblock %}

{% block body %}
<div class="container py-4">

    <!-- Ticket Header -->
    <div class="ticket-header">
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center">
            <div class="mb-3 mb-md-0">
                <div class="d-flex align-items-center flex-wrap gap-3 mb-2">
                    <span class="badge bg-primary fs-5">
                        #{{ ticket.idSistemaInterno }}
                    </span>
                    <h1 class="h3 mb-0">
                        <i class="fas fa-ticket-alt text-primary me-2"></i>
                        {{ ticket.title }}
                    </h1>
                    {% set status_config = {
                        'in_progress': { class: 'warning', label: 'En Progreso' },
                        'pending': { class: 'info', label: 'Pendiente' },
                        'rejected': { class: 'danger', label: 'Rechazado' },
                        'completed': { class: 'success', label: 'Completado' },
                        'delayed': { class: 'warning', label: 'Atrasado' }
                    } %}
                    {% if status_config[ticket.status] is defined %}
                        <span class="status-badge badge bg-{{ status_config[ticket.status].class|default('secondary') }} align-middle">
                            {{ status_config[ticket.status].label }}
                        </span>
                    {% endif %}
                </div>
                
                <div class="d-flex align-items-center flex-wrap gap-3 mt-2">
                    {% if ticket.areaOrigen %}
                        <span class="text-muted">
                            <i class="fas fa-building me-1"></i>
                            {{ ticket.areaOrigen }}
                        </span>
                    {% endif %}
                    {% if ticket.dueDate %}
                        <span class="text-{{ ticket.dueDate|date('Y-m-d') < 'now'|date('Y-m-d') ? 'danger' : 'muted' }}">
                            <i class="far fa-calendar-alt me-1"></i>
                            {{ ticket.dueDate|date('d/m/Y') }}
                            {% if ticket.dueDate|date('Y-m-d') < 'now'|date('Y-m-d') %}
                                <span class="badge bg-danger ms-1">Vencido</span>
                            {% endif %}
                        </span>
                    {% endif %}
                </div>
            </div>
            
            <div class="action-buttons">
                {% if is_granted('ROLE_USER') and not is_granted('ROLE_AUDITOR') and not is_granted('ROLE_ADMIN') %}
                    {% if not ticket.takenBy %}
                        <form method="post" action="{{ path('ticket_take', {'id': ticket.id}) }}" class="d-inline me-2">
                            <button type="submit" class="btn btn-success">
                                <i class="fas fa-hand-paper me-1"></i> Tomar ticket
                            </button>
                        </form>
                    {% else %}
                        <div class="alert alert-info py-1 px-3 d-inline-flex align-items-center me-2 mb-0">
                            <i class="fas fa-info-circle me-2"></i>
                            {% if ticket.takenBy.id == app.user.id %}
                                Has tomado este ticket
                            {% else %}
                                Ticket tomado por otro usuario
                            {% endif %}
                        </div>
                    {% endif %}
                {% endif %}
                
                {% if is_granted('ROLE_AUDITOR') and ticket.status not in ['completed', 'rejected'] %}
                    {% if not ticket.takenBy %}
                        <button type="button" 
                                class="btn btn-primary btn-sm" 
                                data-bs-toggle="modal" 
                                data-bs-target="#assignTicketModal" 
                                data-ticket-id="{{ ticket.id }}"
                                title="Asignar ticket a un usuario">
                            <i class="fas fa-user-plus me-1"></i> Asignar
                        </button>
                    {% elseif ticket.status not in ['rejected', 'completed'] %}
                        <button type="button" 
                                class="btn btn-sm btn-warning" 
                                data-bs-toggle="modal" 
                                data-bs-target="#assignTicketModal" 
                                data-ticket-id="{{ ticket.id }}"
                                title="Reasignar ticket a otro usuario">
                            <i class="fas fa-user-edit me-1"></i> Reasignar
                        </button>
                    {% endif %}
                {% endif %}
                
                {% if is_granted('ROLE_ADMIN') %}
                    <form method="post" action="{{ path('ticket_delete', {'id': ticket.id}) }}" onsubmit="return confirm('¿Está seguro que desea eliminar este ticket?');" class="d-inline">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ ticket.id) }}">
                        <button class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i> Eliminar
                        </button>
                    </form>
                {% endif %}
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Main Content Column -->
        <div class="col-lg-8">
            <!-- Observaciones del Auditor -->
            <div class="ticket-content">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">
                        <i class="fas fa-clipboard-check text-primary me-2"></i>
                        Observación
                    </h5>
                    {% if (is_granted('ROLE_AUDITOR') or is_granted('ROLE_ADMIN')) and (ticket.status == 'completed' or ticket.status == 'rejected') %}
                        <button type="button" class="btn btn-sm btn-outline-primary" id="editObservationBtn">
                            <i class="fas fa-edit me-1"></i> Editar
                        </button>
                    {% endif %}
                </div>
                
                <div class="mb-3" id="observationContent">
                    {% if ticket.observation %}
                        <div class="mb-3">
                            {{ ticket.observation|nl2br }}
                        </div>
                        <div class="text-muted small">
                            <i class="far fa-clock me-1"></i> 
                            {% if ticket.updatedAt %}
                                Actualizado el {{ ticket.updatedAt|date('d/m/Y H:i') }}
                            {% else %}
                                Sin actualizaciones recientes
                            {% endif %}
                        </div>
                    {% else %}
                        <p class="text-muted fst-italic">
                            {% if ticket.status == 'completed' or ticket.status == 'rejected' %}
                                No se han agregado observaciones.
                            {% else %}
                                Las observaciones estarán disponibles cuando el ticket sea completado o rechazado.
                            {% endif %}
                        </p>
                    {% endif %}
                </div>
                
                {% if is_granted('ROLE_AUDITOR') or is_granted('ROLE_ADMIN') %}
                    <div id="observationForm" class="d-none">
                        <form action="{{ path('ticket_auditor_action', {'id': ticket.id}) }}" method="POST">
                            <input type="hidden" name="action" value="update_observation">
                            <input type="hidden" name="_token" value="{{ csrf_token('auditor_action_' ~ ticket.id) }}">
                            <div class="mb-3">
                                <textarea class="form-control" name="observation" rows="4" required>{{ ticket.observation }}</textarea>
                                <div class="form-text">Ingrese las observaciones relevantes sobre el ticket.</div>
                            </div>
                            <div class="d-flex justify-content-end gap-2">
                                <button type="button" id="cancelEditObservation" class="btn btn-outline-secondary">Cancelar</button>
                                <button type="submit" class="btn btn-primary">Guardar cambios</button>
                            </div>
                        </form>
                    </div>
                {% endif %}
            </div>

            <!-- Ticket Actions -->
            {% if is_granted('ROLE_USER') and ticket.status not in ['rejected', 'completed'] %}
                <div class="ticket-actions">
                    <h6 class="mb-3">
                        <i class="fas fa-tools text-primary me-2"></i>
                        Acciones del Ticket
                    </h6>
                    
                    {% if ticket.proposedStatus %}
                        {% set statusLabels = {
                            'rejected': 'rechazado',
                            'in_progress': 'en progreso',
                            'completed': 'completado'
                        } %}
                        <div class="proposal-alert">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <i class="fas fa-clock me-2"></i>
                                    <strong>Propuesta de cambio de estado:</strong>
                                    <span class="ms-2">
                                        {{ statusLabels[ticket.proposedStatus]|default(ticket.proposedStatus) }}
                                        {% if ticket.proposedBy %}
                                            (solicitado por {{ ticket.proposedBy.nombre }} {{ ticket.proposedBy.apellido }})
                                        {% endif %}
                                    </span>
                                </div>
                                {% if is_granted('ROLE_ADMIN') %}
                                    <div class="d-flex gap-2">
                                        <form action="{{ path('ticket_approve_proposal', {'id': ticket.id}) }}" method="post" class="d-inline">
                                            <input type="hidden" name="_token" value="{{ csrf_token('approve_proposal_' ~ ticket.id) }}">
                                            <button type="submit" class="btn btn-sm btn-success">
                                                <i class="fas fa-check me-1"></i> Aprobar
                                            </button>
                                        </form>
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                    {% elseif ticket.status != 'completed' and ticket.status != 'rejected' %}
                        <div class="d-flex flex-wrap gap-2 justify-content-between">
                            <span class="text-muted">Selecciona una acción:</span>
                            <div class="d-flex flex-wrap gap-2">
                                {% if not is_granted('ROLE_AUDITOR') and not is_granted('ROLE_ADMIN') %}
                                    <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#suggestInProgressModal">
                                        <i class="fas fa-play me-1"></i> Sugerir En Progreso
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-success" data-bs-toggle="modal" data-bs-target="#suggestCompleteModal">
                                        <i class="fas fa-check me-1"></i> Sugerir Completado
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#suggestRejectModal">
                                        <i class="fas fa-times me-1"></i> Sugerir Rechazo
                                    </button>
                                {% else %}
                                    <button type="button" class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#auditorRejectModal">
                                        <i class="fas fa-ban me-1"></i> Rechazar
                                    </button>
                                    <button type="button" class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#auditorCompleteModal">
                                        <i class="fas fa-flag-checkered me-1"></i> Finalizar
                                    </button>
                                {% endif %}
                            </div>
                        </div>
                    {% endif %}
                </div>
            {% endif %}

            <!-- Notes Section -->
            <div class="ticket-content mt-4">
                <h5 class="mb-3">
                    <i class="fas fa-sticky-note text-primary me-2"></i>
                    Notas
                </h5>
                
                {% if notes|length > 0 %}
                    <div class="notes-container">
                        {% for note in notes %}
                            <div class="card mb-3">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-user-circle me-2"></i>
                                            <strong>{{ note.createdBy.nombre }} {{ note.createdBy.apellido }}</strong>
                                            <span class="text-muted ms-2 small">{{ note.createdAt|date('d/m/Y H:i') }}</span>
                                        </div>
                                        {% if is_granted('ROLE_ADMIN') or note.createdBy == app.user %}
                                            <form action="{{ path('note_delete', {'id': note.id}) }}" method="post" class="d-inline" onsubmit="return confirm('¿Estás seguro de que deseas eliminar esta nota?')">
                                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ note.id) }}">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        {% endif %}
                                    </div>
                                    <div class="note-content">
                                        {{ note.content|nl2br }}
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                {% else %}
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        No hay notas para mostrar.
                    </div>
                {% endif %}

                {% if is_granted('ROLE_USER') %}
                    <div class="add-note mt-4">
                        <form action="{{ path('note_add', {'ticketId': ticket.id}) }}" method="post">
                            <div class="mb-3">
                                <label for="note_content" class="form-label">Agregar una nota</label>
                                <textarea class="form-control" id="note_content" name="content" rows="3" required></textarea>
                            </div>
                            <div class="d-flex justify-content-end">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane me-1"></i> Enviar
                                </button>
                            </div>
                        </form>
                    </div>
                {% endif %}
            </div>
            
        </div>

        <!-- Sidebar Column -->
        <div class="col-lg-4">
            <!-- Ticket Information Card -->
            <div class="card info-card mb-4">
                <div class="card-body">
                    <h5 class="card-title">
                        <i class="fas fa-info-circle"></i>
                        Información del Ticket
                    </h5>
                    
                    <div class="info-item">
                        <i class="fas fa-fingerprint"></i>
                        <div class="info-content">
                            <div class="info-label">ID Externo</div>
                            <div class="info-value">{{ ticket.idSistemaInterno ?: 'No especificado' }}</div>
                        </div>
                    </div>
                    
                    {% if ticket.status == 'completed' and ticket.completedBy is not null %}
                    <div class="info-item">
                        <i class="fas fa-user-check"></i>
                        <div class="info-content">
                            <div class="info-label">Finalizado por</div>
                            <div class="info-value">
                                {{ ticket.completedBy.nombre }} {{ ticket.completedBy.apellido }}
                                <div class="text-muted small">
                                    {{ ticket.updatedAt ? ticket.updatedAt|date('d/m/Y H:i') : '' }}
                                </div>
                            </div>
                        </div>
                    </div>
                    {% endif %}
                    
                    <div class="info-item">
                        <i class="fas fa-layer-group"></i>
                        <div class="info-content">
                            <div class="info-label">Área de Origen</div>
                            <div class="info-value">{{ ticket.areaOrigen ?: 'No especificada' }}</div>
                        </div>
                    </div>
                    
                    <div class="info-item">
                        <i class="fas fa-user-plus"></i>
                        <div class="info-content">
                            <div class="info-label">Creado por</div>
                            <div class="info-value">
                                <i class="fas fa-user-circle me-1"></i>
                                {{ ticket.createdBy.nombre }} {{ ticket.createdBy.apellido }}
                                <div class="text-muted small">{{ ticket.createdAt|date('d/m/Y H:i') }}</div>
                            </div>
                        </div>
                    </div>
                    
                    {% if ticket.takenBy %}
                        <div class="info-item">
                            <i class="fas fa-user-check"></i>
                            <div class="info-content">
                                <div class="info-label">Tomado por</div>
                                <div class="info-value">
                                    <i class="fas fa-user-check me-1"></i>
                                    {{ ticket.takenBy.nombre }} {{ ticket.takenBy.apellido }}
                                    {% if ticket.takenAt %}
                                        <div class="text-muted small">{{ ticket.takenAt|date('d/m/Y H:i') }}</div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    {% endif %}
                    
                    {% if ticket.status == 'completed' and ticket.updates|length > 0 %}
                        {% set lastUpdate = ticket.updates.first() %}
                        {% if lastUpdate and lastUpdate.status == 'completed' %}
                            <div class="info-item">
                                <i class="fas fa-flag-checkered"></i>
                                <div class="info-content">
                                    <div class="info-label">Completado por</div>
                                    <div class="info-value">
                                        <i class="fas fa-user-check me-1"></i>
                                        {{ lastUpdate.user.nombre }} {{ lastUpdate.user.apellido }}
                                        <div class="text-muted small">{{ lastUpdate.createdAt|date('d/m/Y H:i') }}</div>
                                    </div>
                                </div>
                            </div>
                        {% endif %}
                    {% endif %}
                    
                    {% if ticket.dueDate %}
                        <div class="info-item">
                            <i class="fas fa-calendar-check"></i>
                            <div class="info-content">
                                <div class="info-label">Fecha límite</div>
                                <div class="info-value">
                                    <i class="far fa-clock me-1"></i>
                                    {{ ticket.dueDate|date('d/m/Y') }}
                                    {% if ticket.dueDate|date('Y-m-d') < 'now'|date('Y-m-d') %}
                                        <span class="badge bg-danger ms-2">Vencido</span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    {% endif %}
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modals -->
{% include 'ticket/_modals.html.twig' %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle ticket info visibility
            const toggleInfoBtn = document.getElementById('toggleInfoBtn');
            const ticketInfoContainer = document.getElementById('ticketInfoContainer');
            
            if (toggleInfoBtn && ticketInfoContainer) {
                toggleInfoBtn.addEventListener('click', function() {
                    ticketInfoContainer.classList.toggle('d-none');
                    const icon = this.querySelector('i');
                    if (ticketInfoContainer.classList.contains('d-none')) {
                        icon.classList.remove('fa-eye');
                        icon.classList.add('fa-eye-slash');
                        this.innerHTML = '<i class="fas fa-eye me-1"></i> Mostrar';
                    } else {
                        icon.classList.remove('fa-eye-slash');
                        icon.classList.add('fa-eye');
                        this.innerHTML = '<i class="fas fa-eye-slash me-1"></i> Ocultar';
                    }
                });
            }
            
            // Handle description editing
            const editDescriptionBtn = document.getElementById('editDescriptionBtn');
            const cancelEditDescription = document.getElementById('cancelEditDescription');
            const descriptionView = document.getElementById('descriptionView');
            const descriptionForm = document.getElementById('descriptionForm');
            
            if (editDescriptionBtn && descriptionView && descriptionForm) {
                editDescriptionBtn.addEventListener('click', function() {
                    descriptionView.classList.add('d-none');
                    descriptionForm.classList.remove('d-none');
                    editDescriptionBtn.classList.add('d-none');
                });

                if (cancelEditDescription) {
                    cancelEditDescription.addEventListener('click', function() {
                        descriptionView.classList.remove('d-none');
                        descriptionForm.classList.add('d-none');
                        editDescriptionBtn.classList.remove('d-none');
                    });
                }
            }

            // Handle assign ticket modal
            const assignModal = document.getElementById('assignTicketModal');
            if (assignModal) {
                const assignForm = assignModal.querySelector('form');
                
                // When modal is shown
                assignModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const ticketId = button.getAttribute('data-ticket-id');
                    const modalTitle = assignModal.querySelector('.modal-title');
                    
                    // Update the modal's content
                    if (modalTitle) {
                        modalTitle.textContent = `Asignar Usuarios al Ticket #${ticketId}`;
                    }
                    
                    // Update the form action
                    if (assignForm) {
                        assignForm.action = `{{ path('ticket_assign', {'id': 'TICKET_ID'}) }}`.replace('TICKET_ID', ticketId);
                        
                        // Reset the form when modal is shown
                        assignForm.reset();
                    }
                });
                
                // Handle form submission
                if (assignForm) {
                    assignForm.addEventListener('submit', function(e) {
                        e.preventDefault();
                        
                        const formData = new FormData(this);
                        
                        fetch(this.action, {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Close the modal
                                const modal = bootstrap.Modal.getInstance(assignModal);
                                if (modal) {
                                    modal.hide();
                                }
                                
                                // Show success message
                                const alert = document.createElement('div');
                                alert.className = 'alert alert-success alert-dismissible fade show';
                                alert.innerHTML = `
                                    <i class="fas fa-check-circle me-2"></i>
                                    ${data.message}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                `;
                                
                                // Insert the alert before the ticket header
                                const ticketHeader = document.querySelector('.ticket-header');
                                if (ticketHeader) {
                                    ticketHeader.parentNode.insertBefore(alert, ticketHeader.nextSibling);
                                }
                                
                                // Auto-dismiss the alert after 5 seconds
                                setTimeout(() => {
                                    const bsAlert = new bootstrap.Alert(alert);
                                    bsAlert.close();
                                }, 5000);
                                
                                // Reload the page after a short delay to show the updated data
                                setTimeout(() => {
                                    window.location.reload();
                                }, 1000);
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Ocurrió un error al asignar los usuarios. Por favor, inténtelo de nuevo.');
                        });
                    });
                }
            }
        });

        // Handle observation form toggling
        (function() {
            const editBtn = document.getElementById('editObservationBtn');
            const cancelBtn = document.getElementById('cancelEditObservation');
            const contentEl = document.getElementById('observationContent');
            const formEl = document.getElementById('observationForm');

            if (editBtn && formEl) {
                // Show form when edit button is clicked
                editBtn.addEventListener('click', function() {
                    if (contentEl) contentEl.classList.add('d-none');
                    formEl.classList.remove('d-none');
                    editBtn.classList.add('d-none');
                });

                // Hide form when cancel button is clicked
                if (cancelBtn) {
                    cancelBtn.addEventListener('click', function() {
                        if (contentEl) contentEl.classList.remove('d-none');
                        formEl.classList.add('d-none');
                        editBtn.classList.remove('d-none');
                    });
                }
            }
        })();
    </script>
{% endblock %}

{% endblock %}
