{% extends 'base.html.twig' %}

{% macro sortable_header(label, field, sortState) %}
    {% set currentOrder = sortState.currentSort == field ? sortState.currentOrder : 'none' %}
    {% set newOrder = currentOrder == 'ASC' ? 'DESC' : 'ASC' %}
    
    {% set sortIcon = '' %}
    {% if sortState.currentSort == field %}
        {% if currentOrder == 'ASC' %}
            {% set sortIcon = '<i class="bi bi-sort-down ms-1"></i>' %}
        {% else %}
            {% set sortIcon = '<i class="bi bi-sort-up ms-1"></i>' %}
        {% endif %}
    {% else %}
        {% set sortIcon = '<i class="bi bi-arrow-down-up text-muted ms-1" style="opacity: 0.5;"></i>' %}
    {% endif %}
    
    <a href="{{ path(app.request.attributes.get('_route'), app.request.query.all()|merge({
        'sort_by': field,
        'sort_order': newOrder
    })) }}" class="text-decoration-none text-dark">
        {{ label|raw }} {{ sortIcon|raw }}
    </a>
{% endmacro %}

{% block title %}Lista de Tickets{% endblock %}

{% block body %}
  <div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">üé´ Lista de Tickets de {{ app.user.nombre }} {{ app.user.apellido }}</h1>
        <div class="d-flex gap-2">
            <a href="{{ path('ticket_nuevo') }}" class="btn btn-primary">
                <i class="bi bi-plus-lg me-1"></i> Nuevo Ticket
            </a>
            <button class="btn btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#filtrosPanel" aria-expanded="false" aria-controls="filtrosPanel">
                <i class="bi bi-funnel me-1"></i> Filtros
            </button>
            <button onclick="window.location.reload()" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-clockwise"></i>
            </button>
        </div>
    </div>

    <div class="collapse mb-4" id="filtrosPanel">
        <div class="card shadow-sm">
            <div class="card-body">
                {{ form_start(filter_form, {'method': 'GET', 'attr': {'class': 'row g-3'}}) }}
                    <div class="col-md-4">
                        <label class="form-label small text-muted mb-1">B√∫squeda</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            {{ form_widget(filter_form.search, {'attr': {
                                'class': 'form-control',
                                'placeholder': 'Buscar por ID, pedido o descripci√≥n...'
                            }}) }}
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <label class="form-label small text-muted mb-1">Estado</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-tag"></i></span>
                            {{ form_widget(filter_form.estado, {'attr': {
                                'class': 'form-select',
                                'data-control': 'select2'
                            }}) }}
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <label class="form-label small text-muted mb-1">√Årea</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-building"></i></span>
                            {{ form_widget(filter_form.departamento, {'attr': {
                                'class': 'form-select',
                                'data-control': 'select2'
                            }}) }}
                        </div>
                    </div>
                    
                    <div class="col-md-5">
                        <label class="form-label small text-muted mb-1">Rango de fechas</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                            {{ form_widget(filter_form.fechaDesde, {'attr': {
                                'class': 'form-control',
                                'placeholder': 'Desde',
                                'autocomplete': 'off'
                            }}) }}
                            <span class="input-group-text">hasta</span>
                            {{ form_widget(filter_form.fechaHasta, {'attr': {
                                'class': 'form-control',
                                'placeholder': 'Hasta',
                                'autocomplete': 'off'
                            }}) }}
                        </div>
                    </div>
                    
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="submit" name="{{ filter_form.buscar.vars.full_name }}" class="btn btn-primary w-100">
                            <i class="bi bi-search me-1"></i> Buscar
                        </button>
                    </div>
                    
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="submit" name="{{ filter_form.limpiar.vars.full_name }}" class="btn btn-outline-secondary w-100">
                            <i class="bi bi-x-lg me-1"></i> Limpiar
                        </button>
                    </div>
                {{ form_end(filter_form) }}
            </div>
        </div>
    </div>

    {% if tickets is not empty %}
      <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-end">
                <span class="text-muted small">P√°gina {{ currentPage }} de {{ totalPages }}</span>
            </div>
        </div>
        <div class="card-body p-0">
          <div class="table-responsive">
        <style>
          .table-nowrap td, .table-nowrap th {
            white-space: nowrap;
          }
          .table-fixed {
            table-layout: fixed;
          }
          .text-truncate-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
          }
          .status-select {
            min-width: 120px;
          }
          .actions-column {
            width: 140px;
          }
          .id-column {
            width: 60px;
          }
          .ticket-id-column {
            width: 100px;
          }
          .date-column {
            width: 120px;
          }
          .area-column {
            width: 150px;
          }
          .status-column {
            width: 200px;
          }
          @media (max-width: 1200px) {
            .table-responsive {
              overflow-x: auto;
              -webkit-overflow-scrolling: touch;
            }
          }
        </style>
        <table class="table table-hover table-fixed">
          <thead class="table-light">
            <tr>
              <th class="id-column">
                {{ _self.sortable_header('ID', 'id', sortState) }}
              </th>
              <th class="ticket-id-column">
                {{ _self.sortable_header('Ticket ID', 'ticketId', sortState) }}
              </th>
              <th style="min-width: 200px;">
                {{ _self.sortable_header('Pedido', 'pedido', sortState) }}
              </th>
              <th>
                {{ _self.sortable_header('Descripci√≥n', 'descripcion', sortState) }}
              </th>
              <th class="area-column">
                {{ _self.sortable_header('√Årea De Origen', 'departamento', sortState) }}
              </th>
              <th class="status-column">
                {{ _self.sortable_header('Estado', 'estado', sortState) }}
              </th>
              <th class="date-column">
                {{ _self.sortable_header('Creado', 'createdAt', sortState) }}
              </th>
              <th class="actions-column">Acciones</th>
            </tr>
          </thead>
          <tbody>
            {% for ticket in tickets %}
              <tr>
                <td class="align-middle">{{ ticket.id }}</td>
                <td class="align-middle"><code>{{ ticket.ticketId }}</code></td>
                <td class="text-truncate" style="max-width: 250px;" title="{{ ticket.pedido }}">
                  {{ ticket.pedido ?: '-' }}
                </td>
                <td class="text-truncate-2" style="max-width: 300px;" title="{{ ticket.descripcion }}">
                  {{ ticket.descripcion }}
                </td>
                <td class="align-middle">{{ ticket.departamentoNombre }}</td>
                <td class="align-middle">
                  <form method="post" action="{{ path('ticket_cambiar_estado', { id: ticket.id }) }}" class="m-0">
                    {% set opciones = ['pendiente', 'en proceso', 'terminado', 'rechazado'] %}
                    <div class="input-group input-group-sm">
                      <select name="estado" class="form-select form-select-sm status-select" onchange="this.form.submit()">
                        {% for op in opciones %}
                          <option value="{{ op }}" {{ op == ticket.estado ? 'selected' : '' }}>
                            {{ op|capitalize }}
                          </option>
                        {% endfor %}
                      </select>
                      <input type="hidden" name="_token" value="{{ csrf_token('cambiar_estado_' ~ ticket.id) }}">
                    </div>
                  </form>
                </td>
                <td class="align-middle small">{{ ticket.createdAt|date('d/m/Y H:i', 'America/Argentina/Buenos_Aires') }}</td>
                <td class="align-middle">
                  <div class="btn-group btn-group-sm" role="group">
                    <a href="{{ path('ticket_show', {'id': ticket.id}) }}" 
                       class="btn btn-outline-primary" 
                       title="Ver detalles">
                      <i class="bi bi-eye"></i>
                    </a>
                    <a href="{{ path('ticket_editar', {'id': ticket.id}) }}" 
                       class="btn btn-outline-secondary" 
                       title="Modificar">
                      <i class="bi bi-pencil"></i>
                    </a>
                  </div>
                </td>
              </tr>
            {% endfor %}
              </tbody>
            </table>
          </div>
        </div>
        {% if totalPages > 1 %}
        <div class="card-footer">
            <nav aria-label="Paginaci√≥n de tickets">
                <ul class="pagination justify-content-center mb-0">
                    <li class="page-item {{ currentPage == 1 ? 'disabled' }}">
                        <a class="page-link" href="{{ path('ticket_lista', { page: currentPage - 1 }|merge(searchParams)) }}" aria-label="Anterior">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    
                    {% set startPage = max(1, currentPage - 2) %}
                    {% set endPage = min(totalPages, startPage + 4) %}
                    {% if endPage - startPage < 4 %}
                        {% set startPage = max(1, endPage - 4) %}
                    {% endif %}
                    
                    {% if startPage > 1 %}
                        <li class="page-item">
                            <a class="page-link" href="{{ path('ticket_lista', { page: 1 }|merge(searchParams)) }}">1</a>
                        </li>
                        {% if startPage > 2 %}
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        {% endif %}
                    {% endif %}
                    
                    {% for i in startPage..endPage %}
                        <li class="page-item {{ i == currentPage ? 'active' }}">
                            <a class="page-link" href="{{ path('ticket_lista', { page: i }|merge(searchParams)) }}">
                                {{ i }}
                            </a>
                        </li>
                    {% endfor %}
                    
                    {% if endPage < totalPages %}
                        {% if endPage < totalPages - 1 %}
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        {% endif %}
                        <li class="page-item">
                            <a class="page-link" href="{{ path('ticket_lista', { page: totalPages }|merge(searchParams)) }}">
                                {{ totalPages }}
                            </a>
                        </li>
                    {% endif %}
                    
                    <li class="page-item {{ currentPage == totalPages ? 'disabled' }}">
                        <a class="page-link" href="{{ path('ticket_lista', { page: currentPage + 1 }|merge(searchParams)) }}" aria-label="Siguiente">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
                <div class="text-center text-muted small mt-2">
                    Mostrando {{ (currentPage - 1) * itemsPerPage + 1 }} a 
                    {{ min(currentPage * itemsPerPage, totalItems) }} de {{ totalItems }} tickets
                </div>
            </nav>
        </div>
        {% endif %}
      </div>
    {% else %}
      <div class="alert alert-info">
        <i class="bi bi-info-circle me-2"></i>
        No se encontraron tickets que coincidan con los criterios de b√∫squeda.
        <a href="{{ path('ticket_lista') }}" class="alert-link">Limpiar filtros</a>
      </div>
    {% endif %}
  </div>

  <style>
    .pagination .page-item.active .page-link {
      background-color: #0d6efd;
      border-color: #0d6efd;
    }
    .table th {
      white-space: nowrap;
      background-color: #f8f9fa;
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.75rem;
      letter-spacing: 0.5px;
      cursor: pointer;
      transition: background-color 0.2s;
    }
    .table th a {
      display: flex;
      align-items: center;
      justify-content: space-between;
      color: #495057;
      text-decoration: none;
      width: 100%;
    }
    .table th:hover {
      background-color: #e9ecef;
    }
    .table th.sort-asc i,
    .table th.sort-desc i {
      color: #0d6efd;
    }
    .table td {
      vertical-align: middle;
    }
    .card {
      border: none;
      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
      transition: all 0.3s ease;
    }
    .card:hover {
      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
    }
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      font-weight: 500;
    }
    .form-control, .form-select {
      border-radius: 0.375rem;
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
    }
    .input-group-text {
      background-color: #f8f9fa;
    }
    .badge {
      font-weight: 500;
      padding: 0.35em 0.65em;
      font-size: 0.75em;
    }
  </style>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize datepickers
      const fechaDesde = document.querySelector('input[name$="[fechaDesde]"]');
      const fechaHasta = document.querySelector('input[name$="[fechaHasta]"]');
      
      if (fechaDesde) {
        new Datepicker(fechaDesde, {
          format: 'yyyy-mm-dd',
          autohide: true,
          clearBtn: true,
          language: 'es',
        });
      }
      
      if (fechaHasta) {
        new Datepicker(fechaHasta, {
          format: 'yyyy-mm-dd',
          autohide: true,
          clearBtn: true,
          language: 'es',
        });
      }
      
      // Show filters panel if there are active filters
      const urlParams = new URLSearchParams(window.location.search);
      const hasFilters = Array.from(urlParams.keys()).some(key => 
        key !== 'page' && key !== 'limit' && !key.endsWith('[_token]')
      );
      
      if (hasFilters) {
        const filtersPanel = new bootstrap.Collapse(document.getElementById('filtrosPanel'), {
          toggle: true
        });
      }
    });
  </script>
{% endblock %}
