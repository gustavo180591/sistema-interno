{% extends 'base.html.twig' %}

{% block title %}Gestión de Usuarios{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-switch@3.4.0/dist/css/bootstrap3/bootstrap-switch.min.css">
    <style>
        .form-switch .form-check-input {
            width: 3em;
            margin-left: -2.5em;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280, 0, 0, 0.25%29'/%3e%3c/svg%3e");
            background-position: left center;
            border-radius: 2em;
            transition: background-position 0.15s ease-in-out;
        }
        .form-switch .form-check-input:checked {
            background-position: right center;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
        }
        .form-switch .form-check-input:focus {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%2386b7fe'/%3e%3c/svg%3e");
        }
        .form-switch .form-check-input:disabled {
            pointer-events: none;
            filter: none;
            opacity: 0.5;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Usuarios</h1>
            <a href="{{ path('admin_user_new') }}" class="btn btn-primary">
                <i class="fas fa-plus"></i> Nuevo Usuario
            </a>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Apellido</th>
                                <th>Usuario</th>
                                <th>Roles</th>
                                <th>Estado</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for user in users %}
                            <tr>
                                <td>{{ user.nombre ?? 'N/A' }}</td>
                                <td>{{ user.apellido ?? 'N/A' }}</td>
                                <td>{{ user.username }}</td>
                                <td>
                                    {% for role in user.roleDisplayNamesForTwig %}
                                        <span class="badge bg-primary">{{ role }}</span>
                                    {% endfor %}
                                </td>
                                <td>
                                    <div class="form-check form-switch d-inline-block">
                                        <input type="checkbox" 
                                               class="form-check-input status-toggle" 
                                               data-user-id="{{ user.id }}" 
                                               {{ user.isActive ? 'checked' : '' }}
                                               data-csrf-token="{{ csrf_token('toggle-status' ~ user.id) }}"
                                               {{ app.user.id == user.id ? 'disabled' : '' }}>
                                        <span class="form-check-label ms-2">
                                            <span class="badge {{ user.isActive ? 'bg-success' : 'bg-secondary' }}">
                                                {{ user.isActive ? 'Activo' : 'Inactivo' }}
                                            </span>
                                        </span>
                                    </div>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="{{ path('admin_user_show', {'id': user.id}) }}" class="btn btn-sm btn-info">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="{{ path('admin_user_edit', {'id': user.id}) }}" class="btn btn-sm btn-warning">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        {% if app.user.id != user.id %}
                                            <form method="post" action="{{ path('admin_user_delete', {'id': user.id}) }}" onsubmit="return confirm('¿Está seguro que desea eliminar este usuario?')">
                                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ user.id) }}">
                                                <button class="btn btn-sm btn-danger">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        {% endif %}
                                    </div>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="5" class="text-center">No se encontraron usuarios</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Status Update Toast -->
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div id="statusToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <strong class="me-auto">Éxito</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="toastMessage">
                Estado actualizado correctamente
            </div>
        </div>
        
        <!-- Error Toast -->
        <div id="errorToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-danger text-white">
                <strong class="me-auto">Error</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="errorToastMessage">
                Ocurrió un error al actualizar el estado
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Bootstrap toasts
            const toastElList = [].slice.call(document.querySelectorAll('.toast'));
            const toastList = toastElList.map(function(toastEl) {
                return new bootstrap.Toast(toastEl);
            });

            // Handle status toggle
            document.querySelectorAll('.status-toggle').forEach(function(toggle) {
                toggle.addEventListener('change', function() {
                    const userId = this.dataset.userId;
                    const csrfToken = this.dataset.csrfToken;
                    const isActive = this.checked;
                    const badge = this.closest('td').querySelector('.badge');
                    const row = this.closest('tr');
                    
                    // Disable the toggle while processing
                    this.disabled = true;
                    
                    // Send AJAX request to update status
                    fetch(`/admin/user/${userId}/toggle-status`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: `_token=${encodeURIComponent(csrfToken)}`
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error en la respuesta del servidor');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            // Update the UI
                            if (data.isActive) {
                                badge.classList.remove('bg-secondary');
                                badge.classList.add('bg-success');
                                badge.textContent = 'Activo';
                            } else {
                                badge.classList.remove('bg-success');
                                badge.classList.add('bg-secondary');
                                badge.textContent = 'Inactivo';
                            }
                            
                            // Show success message
                            document.getElementById('toastMessage').textContent = data.message || 'Estado actualizado correctamente';
                            const toast = new bootstrap.Toast(document.getElementById('statusToast'));
                            toast.show();
                            
                            // If the user was deactivated, disable their edit/delete buttons
                            const actionButtons = row.querySelectorAll('.btn-warning, .btn-danger');
                            actionButtons.forEach(btn => {
                                btn.disabled = !data.isActive;
                                btn.classList.toggle('opacity-50', !data.isActive);
                            });
                        } else {
                            throw new Error(data.message || 'Error al actualizar el estado');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Revert the toggle on error
                        this.checked = !isActive;
                        
                        // Show error message
                        document.getElementById('errorToastMessage').textContent = 'Error: ' + (error.message || 'No se pudo actualizar el estado');
                        const toast = new bootstrap.Toast(document.getElementById('errorToast'));
                        toast.show();
                    })
                    .finally(() => {
                        // Re-enable the toggle
                        this.disabled = false;
                    });
                });
            });
        });
    </script>
{% endblock %}
